<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ImportAssetHintColumnMissing" xml:space="preserve">
    <value>You must have at least one of these columns in the excel file: {0}</value>
  </data>
  <data name="ImportDescriptionInvalid" xml:space="preserve">
    <value>The description '{0}' specified for the item is invalid. The description must be in the format '&lt;Category&gt;, &lt;Subcategory&gt;'</value>
  </data>
  <data name="ImportDescriptionCategoryInvalid" xml:space="preserve">
    <value>The description {0} specified for the item is invalid. The category must be no longer than {1} chacarters.</value>
  </data>
  <data name="ImportDescriptionSubcategoryInvalid" xml:space="preserve">
    <value>The description {0} specified for the item is invalid. The subcategory must be no longer than {1} chacarters.</value>
  </data>
  <data name="ImporterException" xml:space="preserve">
    <value>Importer exception: Message {0}, Stack {1}</value>
  </data>
  <data name="ImporterExceptionInner" xml:space="preserve">
    <value>Importer exceptoin: Message {0}, Inner Message {1}, Stack {2}</value>
  </data>
  <data name="ImportExceptionWithExceptionIndex" xml:space="preserve">
    <value>An exception was generated during the import, please contact technical support [Item: {0}]</value>
  </data>
  <data name="ImportFileCouldNotBeRead" xml:space="preserve">
    <value>The file specified could not be loaded</value>
  </data>
  <data name="ImportInitializationError" xml:space="preserve">
    <value>The system threw an exception during initialization, please contact technical support for details.</value>
  </data>
  <data name="ImportInvalidAssetId" xml:space="preserve">
    <value>The asset inventory id specified cannot be found in the existing inventory</value>
  </data>
  <data name="ImportInvalidCellValue" xml:space="preserve">
    <value>The item cannot be imported because the value '{0}' for column '{1}' is invalid.</value>
  </data>
  <data name="ImportInvalidClassSpecified" xml:space="preserve">
    <value>The class specified is invalid. The class must be one of the following: {0}</value>
  </data>
  <data name="ImportInvalidDomainProject" xml:space="preserve">
    <value>The project and enterprise specified could not be found</value>
  </data>
  <data name="ImportInvalidFile" xml:space="preserve">
    <value>The file specified is invalid. Please make sure you specify a valid xlsx file. The importer does not support xls files.</value>
  </data>
  <data name="ImportInvalidItemWithIndex" xml:space="preserve">
    <value>The item {0} specified has errors and cannot be imported</value>
  </data>
  <data name="ImportItemAssetHintColumnMissing" xml:space="preserve">
    <value>You must have at least one of these fields per asset entry: {0}</value>
  </data>
  <data name="ImportJSNNotFound" xml:space="preserve">
    <value>The JSN '{0}' specified could not be found. A new JSN will be created in the Catalog.</value>
  </data>
  <data name="ImportMaxRows" xml:space="preserve">
    <value>The excel file specified exceeds the maximum number of supported rows</value>
  </data>
  <data name="ImportMissingCategorySubcategory" xml:space="preserve">
    <value>No matching asset could be found and a new one cannot be created because no description or JSN Nomeclature has been specified.</value>
  </data>
  <data name="ImportMissingItemRequiredColumns" xml:space="preserve">
    <value>The following mandatory fields are empty for this asset: {0}</value>
  </data>
  <data name="ImportMissingRequiredColumns" xml:space="preserve">
    <value>The column(s) '{0}' are mandatory and could not be found in the excel file. </value>
  </data>
  <data name="ImportMissingResponsability" xml:space="preserve">
    <value>The responsibility specified is invalid.</value>
  </data>
  <data name="ImportEmptyWorksheet" xml:space="preserve">
    <value>The worksheet specified is empty.</value>    
  </data>
  <data name="ImportMultipleAssetsFound" xml:space="preserve">
    <value>Multiple assets matching the specified values has been found. Please select one of them.</value>
  </data>
  <data name="ImportNoAssetReturnedWithIndex" xml:space="preserve">
    <value>Internal error, no asset was returned for item {0}</value>
  </data>
  <data name="ImportNoMatchingAssets" xml:space="preserve">
    <value>No assets were found matching the specified values. The import will add a new entry to the catalog.</value>
  </data>
  <data name="ImportUtilityAudaxWareMismatch" xml:space="preserve">
    <value>The value '{2}' for JSN Utility {0}  does not match the value '{1}' found in the AudaxWare JSN Catalog</value>
  </data>
  <data name="ImportUtilityDomainMismatch" xml:space="preserve">
    <value>The value '{2}' for JSN Utility {0}  does not match the value '{1}' found in your Enterprise JSN Catalog (created on previous imports)</value>
  </data>
  <data name="ImportInvalidUnitOfMeasurement" xml:space="preserve">
    <value>The Unit '{0}' is invalid.</value>
  </data>
  <data name="ImportPlacementInvalid" xml:space="preserve">
    <value>The value '{0}' for placement is invalid</value>
  </data>
  <data name="ImportCompletedError" xml:space="preserve">
    <value>Error to complete import. Status {0}, Error Message {1}.</value>
  </data>
  <data name="ImportCompletedSuccess" xml:space="preserve">
    <value>Import completed sucessfully. Please refresh your browser (Total Import time: {0:D2}min)</value>
  </data>
  <data name="ImportExceptionError" xml:space="preserve">
    <value>An exception happened while trying to import, please contact technical support.</value>
  </data>
  <data name="ImportStatusReport" xml:space="preserve">
    <value>The import has processed {0} of {1} items.</value>
  </data>
  <data name="ImportJSNSuffixTooLong" xml:space="preserve">
    <value>The JSN suffix must have at most 4 characters</value>
  </data>
  <data name="ImportFieldLimitExceeded" xml:space="preserve">
    <value>The value for the field '{0}' has {1} characters and exceeds the maximum allowed of {2}</value>
  </data>
  <data name="ImportDuplicateColumn" xml:space="preserve">
    <value>Invalid file. The column '{0}' appears multiple times in the worksheet.</value>
  </data>
  <data name="ImportFileSizeExceeded" xml:space="preserve">
    <value>The file size exceeded the limit of {0} Mb.</value>
  </data>
</root>