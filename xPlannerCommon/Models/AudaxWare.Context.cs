//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace xPlannerCommon.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class audaxwareEntities : DbContext
    {
        public audaxwareEntities()
            : base("name=audaxwareEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<assets_category> assets_category { get; set; }
        public virtual DbSet<assets_codes> assets_codes { get; set; }
        public virtual DbSet<assets_measurement> assets_measurement { get; set; }
        public virtual DbSet<assets_project> assets_project { get; set; }
        public virtual DbSet<assets_subcategory> assets_subcategory { get; set; }
        public virtual DbSet<assets_vendor> assets_vendor { get; set; }
        public virtual DbSet<bundle> bundles { get; set; }
        public virtual DbSet<bundle_asset> bundle_asset { get; set; }
        public virtual DbSet<bundle_inventory> bundle_inventory { get; set; }
        public virtual DbSet<client> clients { get; set; }
        public virtual DbSet<cost_center> cost_center { get; set; }
        public virtual DbSet<dashboard> dashboards { get; set; }
        public virtual DbSet<department_type> department_type { get; set; }
        public virtual DbSet<document_types> document_types { get; set; }
        public virtual DbSet<facility> facilities { get; set; }
        public virtual DbSet<global_contact> global_contact { get; set; }
        public virtual DbSet<inventory_documents> inventory_documents { get; set; }
        public virtual DbSet<inventory_options> inventory_options { get; set; }
        public virtual DbSet<inventory_tab_display_prefs> inventory_tab_display_prefs { get; set; }
        public virtual DbSet<jsn> jsns { get; set; }
        public virtual DbSet<lu_state> lu_state { get; set; }
        public virtual DbSet<manufacturer> manufacturers { get; set; }
        public virtual DbSet<manufacturer_contact> manufacturer_contact { get; set; }
        public virtual DbSet<phase_documents> phase_documents { get; set; }
        public virtual DbSet<profile> profiles { get; set; }
        public virtual DbSet<project_addresses> project_addresses { get; set; }
        public virtual DbSet<project_user> project_user { get; set; }
        public virtual DbSet<report_location> report_location { get; set; }
        public virtual DbSet<report_type> report_type { get; set; }
        public virtual DbSet<role_pages> role_pages { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<user_notification> user_notification { get; set; }
        public virtual DbSet<user_project_mine> user_project_mine { get; set; }
        public virtual DbSet<users_track> users_track { get; set; }
        public virtual DbSet<vendor> vendors { get; set; }
        public virtual DbSet<ancillary_v> ancillary_v { get; set; }
        public virtual DbSet<AudaxWarePowerBI> AudaxWarePowerBIs { get; set; }
        public virtual DbSet<full_project_name> full_project_name { get; set; }
        public virtual DbSet<inventory_po_qty_v> inventory_po_qty_v { get; set; }
        public virtual DbSet<item_status_v> item_status_v { get; set; }
        public virtual DbSet<joined_category_subcategory> joined_category_subcategory { get; set; }
        public virtual DbSet<manufacturer_contact_all> manufacturer_contact_all { get; set; }
        public virtual DbSet<matching_values> matching_values { get; set; }
        public virtual DbSet<vendor_contact_all> vendor_contact_all { get; set; }
        public virtual DbSet<documents_display_levels> documents_display_levels { get; set; }
        public virtual DbSet<asset> assets { get; set; }
        public virtual DbSet<asset_summarized> asset_summarized { get; set; }
        public virtual DbSet<project> projects { get; set; }
        public virtual DbSet<project_department> project_department { get; set; }
        public virtual DbSet<project_phase> project_phase { get; set; }
        public virtual DbSet<project_room> project_room { get; set; }
        public virtual DbSet<assets_options> assets_options { get; set; }
        public virtual DbSet<domain_document> domain_document { get; set; }
        public virtual DbSet<asset_option_scope> asset_option_scope { get; set; }
        public virtual DbSet<temporary_location> temporary_location { get; set; }
        public virtual DbSet<domain> domains { get; set; }
        public virtual DbSet<vendor_contact> vendor_contact { get; set; }
        public virtual DbSet<cutsheet_to_generate> cutsheet_to_generate { get; set; }
        public virtual DbSet<purchase_order> purchase_order { get; set; }
        public virtual DbSet<final_disposition> final_disposition { get; set; }
        public virtual DbSet<inventory_purchase_order> inventory_purchase_order { get; set; }
        public virtual DbSet<audit_log> audit_log { get; set; }
        public virtual DbSet<documents_associations> documents_associations { get; set; }
        public virtual DbSet<project_documents> project_documents { get; set; }
        public virtual DbSet<responsability> responsabilities { get; set; }
        public virtual DbSet<asset_it_connectivity> asset_it_connectivity { get; set; }
        public virtual DbSet<inventory_w_relo_v> inventory_w_relo_v { get; set; }
        public virtual DbSet<User_gridView> User_gridView { get; set; }
        public virtual DbSet<project_room_inventory> project_room_inventory { get; set; }
        public virtual DbSet<project_report> project_report { get; set; }
        public virtual DbSet<asset_inventory> asset_inventory { get; set; }
    
        public virtual int add_option_picture(Nullable<short> domain_id, string filename, string blobFileNameWithExtension, string extension, Nullable<int> optionID, Nullable<bool> isInventory, string inventoriesIds)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var blobFileNameWithExtensionParameter = blobFileNameWithExtension != null ?
                new ObjectParameter("blobFileNameWithExtension", blobFileNameWithExtension) :
                new ObjectParameter("blobFileNameWithExtension", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("extension", extension) :
                new ObjectParameter("extension", typeof(string));
    
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("optionID", optionID) :
                new ObjectParameter("optionID", typeof(int));
    
            var isInventoryParameter = isInventory.HasValue ?
                new ObjectParameter("isInventory", isInventory) :
                new ObjectParameter("isInventory", typeof(bool));
    
            var inventoriesIdsParameter = inventoriesIds != null ?
                new ObjectParameter("inventoriesIds", inventoriesIds) :
                new ObjectParameter("inventoriesIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_option_picture", domain_idParameter, filenameParameter, blobFileNameWithExtensionParameter, extensionParameter, optionIDParameter, isInventoryParameter, inventoriesIdsParameter);
        }
    
        public virtual ObjectResult<asset_import_search_Result> asset_import_search(Nullable<short> domain_id, Nullable<bool> show_audaxware_info, string asset_code, string manufacturer, string model_number, string model_name, string asset_description, Nullable<int> jsn_id, Nullable<short> jsn_domain_id, string jsn_suffix, Nullable<int> project_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var show_audaxware_infoParameter = show_audaxware_info.HasValue ?
                new ObjectParameter("show_audaxware_info", show_audaxware_info) :
                new ObjectParameter("show_audaxware_info", typeof(bool));
    
            var asset_codeParameter = asset_code != null ?
                new ObjectParameter("asset_code", asset_code) :
                new ObjectParameter("asset_code", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("manufacturer", manufacturer) :
                new ObjectParameter("manufacturer", typeof(string));
    
            var model_numberParameter = model_number != null ?
                new ObjectParameter("model_number", model_number) :
                new ObjectParameter("model_number", typeof(string));
    
            var model_nameParameter = model_name != null ?
                new ObjectParameter("model_name", model_name) :
                new ObjectParameter("model_name", typeof(string));
    
            var asset_descriptionParameter = asset_description != null ?
                new ObjectParameter("asset_description", asset_description) :
                new ObjectParameter("asset_description", typeof(string));
    
            var jsn_idParameter = jsn_id.HasValue ?
                new ObjectParameter("jsn_id", jsn_id) :
                new ObjectParameter("jsn_id", typeof(int));
    
            var jsn_domain_idParameter = jsn_domain_id.HasValue ?
                new ObjectParameter("jsn_domain_id", jsn_domain_id) :
                new ObjectParameter("jsn_domain_id", typeof(short));
    
            var jsn_suffixParameter = jsn_suffix != null ?
                new ObjectParameter("jsn_suffix", jsn_suffix) :
                new ObjectParameter("jsn_suffix", typeof(string));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asset_import_search_Result>("asset_import_search", domain_idParameter, show_audaxware_infoParameter, asset_codeParameter, manufacturerParameter, model_numberParameter, model_nameParameter, asset_descriptionParameter, jsn_idParameter, jsn_domain_idParameter, jsn_suffixParameter, project_idParameter);
        }
    
        public virtual int change_department_phase(Nullable<int> project_id, Nullable<int> old_phase_id, Nullable<int> department_id, Nullable<int> new_phase_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var old_phase_idParameter = old_phase_id.HasValue ?
                new ObjectParameter("old_phase_id", old_phase_id) :
                new ObjectParameter("old_phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var new_phase_idParameter = new_phase_id.HasValue ?
                new ObjectParameter("new_phase_id", new_phase_id) :
                new ObjectParameter("new_phase_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("change_department_phase", project_idParameter, old_phase_idParameter, department_idParameter, new_phase_idParameter);
        }
    
        public virtual int copy_departments(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<short> copy_domain_id, Nullable<int> copy_project_id, Nullable<int> copy_phase_id, Nullable<int> copy_department_id, Nullable<int> copy_room_id, string added_by, Nullable<bool> copy_opt_col, Nullable<bool> from_project, ObjectParameter return_var)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var copy_domain_idParameter = copy_domain_id.HasValue ?
                new ObjectParameter("copy_domain_id", copy_domain_id) :
                new ObjectParameter("copy_domain_id", typeof(short));
    
            var copy_project_idParameter = copy_project_id.HasValue ?
                new ObjectParameter("copy_project_id", copy_project_id) :
                new ObjectParameter("copy_project_id", typeof(int));
    
            var copy_phase_idParameter = copy_phase_id.HasValue ?
                new ObjectParameter("copy_phase_id", copy_phase_id) :
                new ObjectParameter("copy_phase_id", typeof(int));
    
            var copy_department_idParameter = copy_department_id.HasValue ?
                new ObjectParameter("copy_department_id", copy_department_id) :
                new ObjectParameter("copy_department_id", typeof(int));
    
            var copy_room_idParameter = copy_room_id.HasValue ?
                new ObjectParameter("copy_room_id", copy_room_id) :
                new ObjectParameter("copy_room_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var copy_opt_colParameter = copy_opt_col.HasValue ?
                new ObjectParameter("copy_opt_col", copy_opt_col) :
                new ObjectParameter("copy_opt_col", typeof(bool));
    
            var from_projectParameter = from_project.HasValue ?
                new ObjectParameter("from_project", from_project) :
                new ObjectParameter("from_project", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_departments", domain_idParameter, project_idParameter, phase_idParameter, copy_domain_idParameter, copy_project_idParameter, copy_phase_idParameter, copy_department_idParameter, copy_room_idParameter, added_byParameter, copy_opt_colParameter, from_projectParameter, return_var);
        }
    
        public virtual int copy_from_project(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<short> copy_domain_id, Nullable<int> copy_project_id, Nullable<int> copy_phase_id, Nullable<int> copy_department_id, Nullable<int> copy_room_id, string added_by, Nullable<bool> copy_opt_col, ObjectParameter return_var)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var copy_domain_idParameter = copy_domain_id.HasValue ?
                new ObjectParameter("copy_domain_id", copy_domain_id) :
                new ObjectParameter("copy_domain_id", typeof(short));
    
            var copy_project_idParameter = copy_project_id.HasValue ?
                new ObjectParameter("copy_project_id", copy_project_id) :
                new ObjectParameter("copy_project_id", typeof(int));
    
            var copy_phase_idParameter = copy_phase_id.HasValue ?
                new ObjectParameter("copy_phase_id", copy_phase_id) :
                new ObjectParameter("copy_phase_id", typeof(int));
    
            var copy_department_idParameter = copy_department_id.HasValue ?
                new ObjectParameter("copy_department_id", copy_department_id) :
                new ObjectParameter("copy_department_id", typeof(int));
    
            var copy_room_idParameter = copy_room_id.HasValue ?
                new ObjectParameter("copy_room_id", copy_room_id) :
                new ObjectParameter("copy_room_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var copy_opt_colParameter = copy_opt_col.HasValue ?
                new ObjectParameter("copy_opt_col", copy_opt_col) :
                new ObjectParameter("copy_opt_col", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_from_project", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, copy_domain_idParameter, copy_project_idParameter, copy_phase_idParameter, copy_department_idParameter, copy_room_idParameter, added_byParameter, copy_opt_colParameter, return_var);
        }
    
        public virtual ObjectResult<copy_inventory_budget_values_Result> copy_inventory_budget_values(Nullable<short> domain_id, Nullable<int> curr_project_id, Nullable<int> curr_phase_id, Nullable<int> curr_department_id, Nullable<int> curr_room_id, Nullable<int> curr_inventory_id, Nullable<int> to_domain, Nullable<int> to_project_id, Nullable<int> to_phase_id, Nullable<int> to_department_id, Nullable<int> to_room_id, Nullable<int> to_inventory_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var curr_project_idParameter = curr_project_id.HasValue ?
                new ObjectParameter("curr_project_id", curr_project_id) :
                new ObjectParameter("curr_project_id", typeof(int));
    
            var curr_phase_idParameter = curr_phase_id.HasValue ?
                new ObjectParameter("curr_phase_id", curr_phase_id) :
                new ObjectParameter("curr_phase_id", typeof(int));
    
            var curr_department_idParameter = curr_department_id.HasValue ?
                new ObjectParameter("curr_department_id", curr_department_id) :
                new ObjectParameter("curr_department_id", typeof(int));
    
            var curr_room_idParameter = curr_room_id.HasValue ?
                new ObjectParameter("curr_room_id", curr_room_id) :
                new ObjectParameter("curr_room_id", typeof(int));
    
            var curr_inventory_idParameter = curr_inventory_id.HasValue ?
                new ObjectParameter("curr_inventory_id", curr_inventory_id) :
                new ObjectParameter("curr_inventory_id", typeof(int));
    
            var to_domainParameter = to_domain.HasValue ?
                new ObjectParameter("to_domain", to_domain) :
                new ObjectParameter("to_domain", typeof(int));
    
            var to_project_idParameter = to_project_id.HasValue ?
                new ObjectParameter("to_project_id", to_project_id) :
                new ObjectParameter("to_project_id", typeof(int));
    
            var to_phase_idParameter = to_phase_id.HasValue ?
                new ObjectParameter("to_phase_id", to_phase_id) :
                new ObjectParameter("to_phase_id", typeof(int));
    
            var to_department_idParameter = to_department_id.HasValue ?
                new ObjectParameter("to_department_id", to_department_id) :
                new ObjectParameter("to_department_id", typeof(int));
    
            var to_room_idParameter = to_room_id.HasValue ?
                new ObjectParameter("to_room_id", to_room_id) :
                new ObjectParameter("to_room_id", typeof(int));
    
            var to_inventory_idParameter = to_inventory_id.HasValue ?
                new ObjectParameter("to_inventory_id", to_inventory_id) :
                new ObjectParameter("to_inventory_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<copy_inventory_budget_values_Result>("copy_inventory_budget_values", domain_idParameter, curr_project_idParameter, curr_phase_idParameter, curr_department_idParameter, curr_room_idParameter, curr_inventory_idParameter, to_domainParameter, to_project_idParameter, to_phase_idParameter, to_department_idParameter, to_room_idParameter, to_inventory_idParameter);
        }
    
        public virtual int copy_manufacturer_items(Nullable<short> from_domain_id, Nullable<int> from_manufacturer_id, Nullable<short> to_domain_id, Nullable<int> to_manufacturer_id, string added_by)
        {
            var from_domain_idParameter = from_domain_id.HasValue ?
                new ObjectParameter("from_domain_id", from_domain_id) :
                new ObjectParameter("from_domain_id", typeof(short));
    
            var from_manufacturer_idParameter = from_manufacturer_id.HasValue ?
                new ObjectParameter("from_manufacturer_id", from_manufacturer_id) :
                new ObjectParameter("from_manufacturer_id", typeof(int));
    
            var to_domain_idParameter = to_domain_id.HasValue ?
                new ObjectParameter("to_domain_id", to_domain_id) :
                new ObjectParameter("to_domain_id", typeof(short));
    
            var to_manufacturer_idParameter = to_manufacturer_id.HasValue ?
                new ObjectParameter("to_manufacturer_id", to_manufacturer_id) :
                new ObjectParameter("to_manufacturer_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_manufacturer_items", from_domain_idParameter, from_manufacturer_idParameter, to_domain_idParameter, to_manufacturer_idParameter, added_byParameter);
        }
    
        public virtual int copy_options(Nullable<int> from_inventory_id, Nullable<int> to_inventory_id, Nullable<int> to_domain_id, Nullable<decimal> options_unit_price, string asset_profile, string asset_profile_budget, Nullable<bool> erase_pre_existing_data)
        {
            var from_inventory_idParameter = from_inventory_id.HasValue ?
                new ObjectParameter("from_inventory_id", from_inventory_id) :
                new ObjectParameter("from_inventory_id", typeof(int));
    
            var to_inventory_idParameter = to_inventory_id.HasValue ?
                new ObjectParameter("to_inventory_id", to_inventory_id) :
                new ObjectParameter("to_inventory_id", typeof(int));
    
            var to_domain_idParameter = to_domain_id.HasValue ?
                new ObjectParameter("to_domain_id", to_domain_id) :
                new ObjectParameter("to_domain_id", typeof(int));
    
            var options_unit_priceParameter = options_unit_price.HasValue ?
                new ObjectParameter("options_unit_price", options_unit_price) :
                new ObjectParameter("options_unit_price", typeof(decimal));
    
            var asset_profileParameter = asset_profile != null ?
                new ObjectParameter("asset_profile", asset_profile) :
                new ObjectParameter("asset_profile", typeof(string));
    
            var asset_profile_budgetParameter = asset_profile_budget != null ?
                new ObjectParameter("asset_profile_budget", asset_profile_budget) :
                new ObjectParameter("asset_profile_budget", typeof(string));
    
            var erase_pre_existing_dataParameter = erase_pre_existing_data.HasValue ?
                new ObjectParameter("erase_pre_existing_data", erase_pre_existing_data) :
                new ObjectParameter("erase_pre_existing_data", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_options", from_inventory_idParameter, to_inventory_idParameter, to_domain_idParameter, options_unit_priceParameter, asset_profileParameter, asset_profile_budgetParameter, erase_pre_existing_dataParameter);
        }
    
        public virtual int copy_phases(Nullable<short> domain_id, Nullable<int> project_id, Nullable<short> copy_domain_id, Nullable<int> copy_project_id, Nullable<int> copy_phase_id, Nullable<int> copy_department_id, Nullable<int> copy_room_id, string added_by, Nullable<bool> copy_opt_col, Nullable<bool> from_project, ObjectParameter return_var)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var copy_domain_idParameter = copy_domain_id.HasValue ?
                new ObjectParameter("copy_domain_id", copy_domain_id) :
                new ObjectParameter("copy_domain_id", typeof(short));
    
            var copy_project_idParameter = copy_project_id.HasValue ?
                new ObjectParameter("copy_project_id", copy_project_id) :
                new ObjectParameter("copy_project_id", typeof(int));
    
            var copy_phase_idParameter = copy_phase_id.HasValue ?
                new ObjectParameter("copy_phase_id", copy_phase_id) :
                new ObjectParameter("copy_phase_id", typeof(int));
    
            var copy_department_idParameter = copy_department_id.HasValue ?
                new ObjectParameter("copy_department_id", copy_department_id) :
                new ObjectParameter("copy_department_id", typeof(int));
    
            var copy_room_idParameter = copy_room_id.HasValue ?
                new ObjectParameter("copy_room_id", copy_room_id) :
                new ObjectParameter("copy_room_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var copy_opt_colParameter = copy_opt_col.HasValue ?
                new ObjectParameter("copy_opt_col", copy_opt_col) :
                new ObjectParameter("copy_opt_col", typeof(bool));
    
            var from_projectParameter = from_project.HasValue ?
                new ObjectParameter("from_project", from_project) :
                new ObjectParameter("from_project", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_phases", domain_idParameter, project_idParameter, copy_domain_idParameter, copy_project_idParameter, copy_phase_idParameter, copy_department_idParameter, copy_room_idParameter, added_byParameter, copy_opt_colParameter, from_projectParameter, return_var);
        }
    
        public virtual int copy_project(Nullable<short> domainId, Nullable<int> projectId, string projectDescription, Nullable<bool> copyUser, string addedBy)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(short));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            var projectDescriptionParameter = projectDescription != null ?
                new ObjectParameter("projectDescription", projectDescription) :
                new ObjectParameter("projectDescription", typeof(string));
    
            var copyUserParameter = copyUser.HasValue ?
                new ObjectParameter("copyUser", copyUser) :
                new ObjectParameter("copyUser", typeof(bool));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_project", domainIdParameter, projectIdParameter, projectDescriptionParameter, copyUserParameter, addedByParameter);
        }
    
        public virtual int copy_vendor_items(Nullable<short> from_domain_id, Nullable<int> from_vendor_id, Nullable<short> to_domain_id, Nullable<int> to_vendor_id)
        {
            var from_domain_idParameter = from_domain_id.HasValue ?
                new ObjectParameter("from_domain_id", from_domain_id) :
                new ObjectParameter("from_domain_id", typeof(short));
    
            var from_vendor_idParameter = from_vendor_id.HasValue ?
                new ObjectParameter("from_vendor_id", from_vendor_id) :
                new ObjectParameter("from_vendor_id", typeof(int));
    
            var to_domain_idParameter = to_domain_id.HasValue ?
                new ObjectParameter("to_domain_id", to_domain_id) :
                new ObjectParameter("to_domain_id", typeof(short));
    
            var to_vendor_idParameter = to_vendor_id.HasValue ?
                new ObjectParameter("to_vendor_id", to_vendor_id) :
                new ObjectParameter("to_vendor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_vendor_items", from_domain_idParameter, from_vendor_idParameter, to_domain_idParameter, to_vendor_idParameter);
        }
    
        public virtual ObjectResult<project_room> create_template(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<short> new_domain_id, string description, string added_by, Nullable<short> related_project_domain_id, Nullable<int> related_project_id, Nullable<bool> fromRoom, string room_comment)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var new_domain_idParameter = new_domain_id.HasValue ?
                new ObjectParameter("new_domain_id", new_domain_id) :
                new ObjectParameter("new_domain_id", typeof(short));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var related_project_domain_idParameter = related_project_domain_id.HasValue ?
                new ObjectParameter("related_project_domain_id", related_project_domain_id) :
                new ObjectParameter("related_project_domain_id", typeof(short));
    
            var related_project_idParameter = related_project_id.HasValue ?
                new ObjectParameter("related_project_id", related_project_id) :
                new ObjectParameter("related_project_id", typeof(int));
    
            var fromRoomParameter = fromRoom.HasValue ?
                new ObjectParameter("fromRoom", fromRoom) :
                new ObjectParameter("fromRoom", typeof(bool));
    
            var room_commentParameter = room_comment != null ?
                new ObjectParameter("room_comment", room_comment) :
                new ObjectParameter("room_comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<project_room>("create_template", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, new_domain_idParameter, descriptionParameter, added_byParameter, related_project_domain_idParameter, related_project_idParameter, fromRoomParameter, room_commentParameter);
        }
    
        public virtual ObjectResult<project_room> create_template(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<short> new_domain_id, string description, string added_by, Nullable<short> related_project_domain_id, Nullable<int> related_project_id, Nullable<bool> fromRoom, string room_comment, MergeOption mergeOption)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var new_domain_idParameter = new_domain_id.HasValue ?
                new ObjectParameter("new_domain_id", new_domain_id) :
                new ObjectParameter("new_domain_id", typeof(short));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var related_project_domain_idParameter = related_project_domain_id.HasValue ?
                new ObjectParameter("related_project_domain_id", related_project_domain_id) :
                new ObjectParameter("related_project_domain_id", typeof(short));
    
            var related_project_idParameter = related_project_id.HasValue ?
                new ObjectParameter("related_project_id", related_project_id) :
                new ObjectParameter("related_project_id", typeof(int));
    
            var fromRoomParameter = fromRoom.HasValue ?
                new ObjectParameter("fromRoom", fromRoom) :
                new ObjectParameter("fromRoom", typeof(bool));
    
            var room_commentParameter = room_comment != null ?
                new ObjectParameter("room_comment", room_comment) :
                new ObjectParameter("room_comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<project_room>("create_template", mergeOption, domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, new_domain_idParameter, descriptionParameter, added_byParameter, related_project_domain_idParameter, related_project_idParameter, fromRoomParameter, room_commentParameter);
        }
    
        public virtual int delete_assets_options(string inventories_id, string mantain_options_ids)
        {
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            var mantain_options_idsParameter = mantain_options_ids != null ?
                new ObjectParameter("mantain_options_ids", mantain_options_ids) :
                new ObjectParameter("mantain_options_ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_assets_options", inventories_idParameter, mantain_options_idsParameter);
        }
    
        public virtual int delete_inventory_document(Nullable<short> domain_id, Nullable<int> from_inventory_id, Nullable<int> document_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var from_inventory_idParameter = from_inventory_id.HasValue ?
                new ObjectParameter("from_inventory_id", from_inventory_id) :
                new ObjectParameter("from_inventory_id", typeof(int));
    
            var document_idParameter = document_id.HasValue ?
                new ObjectParameter("document_id", document_id) :
                new ObjectParameter("document_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_inventory_document", domain_idParameter, from_inventory_idParameter, document_idParameter);
        }
    
        public virtual int delete_room(Nullable<int> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_room", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter);
        }
    
        public virtual ObjectResult<department_inventory_po_Result> department_inventory_po(Nullable<int> domain_id, Nullable<int> project_id, Nullable<int> phase_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<department_inventory_po_Result>("department_inventory_po", domain_idParameter, project_idParameter, phase_idParameter);
        }
    
        public virtual ObjectResult<duplicate_asset_Result> duplicate_asset(Nullable<short> new_domain_id, Nullable<int> old_asset_id, Nullable<bool> change_inventories, string added_by)
        {
            var new_domain_idParameter = new_domain_id.HasValue ?
                new ObjectParameter("new_domain_id", new_domain_id) :
                new ObjectParameter("new_domain_id", typeof(short));
    
            var old_asset_idParameter = old_asset_id.HasValue ?
                new ObjectParameter("old_asset_id", old_asset_id) :
                new ObjectParameter("old_asset_id", typeof(int));
    
            var change_inventoriesParameter = change_inventories.HasValue ?
                new ObjectParameter("change_inventories", change_inventories) :
                new ObjectParameter("change_inventories", typeof(bool));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<duplicate_asset_Result>("duplicate_asset", new_domain_idParameter, old_asset_idParameter, change_inventoriesParameter, added_byParameter);
        }
    
        public virtual ObjectResult<asset> duplicate_asset_new_code(Nullable<short> old_domain_id, Nullable<int> old_asset_id, Nullable<short> new_domain_id, string new_code, Nullable<bool> change_inventories, string added_by, Nullable<bool> link_duplicated, Nullable<bool> need_approval, Nullable<bool> approval_modify_aw_asset)
        {
            var old_domain_idParameter = old_domain_id.HasValue ?
                new ObjectParameter("old_domain_id", old_domain_id) :
                new ObjectParameter("old_domain_id", typeof(short));
    
            var old_asset_idParameter = old_asset_id.HasValue ?
                new ObjectParameter("old_asset_id", old_asset_id) :
                new ObjectParameter("old_asset_id", typeof(int));
    
            var new_domain_idParameter = new_domain_id.HasValue ?
                new ObjectParameter("new_domain_id", new_domain_id) :
                new ObjectParameter("new_domain_id", typeof(short));
    
            var new_codeParameter = new_code != null ?
                new ObjectParameter("new_code", new_code) :
                new ObjectParameter("new_code", typeof(string));
    
            var change_inventoriesParameter = change_inventories.HasValue ?
                new ObjectParameter("change_inventories", change_inventories) :
                new ObjectParameter("change_inventories", typeof(bool));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var link_duplicatedParameter = link_duplicated.HasValue ?
                new ObjectParameter("link_duplicated", link_duplicated) :
                new ObjectParameter("link_duplicated", typeof(bool));
    
            var need_approvalParameter = need_approval.HasValue ?
                new ObjectParameter("need_approval", need_approval) :
                new ObjectParameter("need_approval", typeof(bool));
    
            var approval_modify_aw_assetParameter = approval_modify_aw_asset.HasValue ?
                new ObjectParameter("approval_modify_aw_asset", approval_modify_aw_asset) :
                new ObjectParameter("approval_modify_aw_asset", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asset>("duplicate_asset_new_code", old_domain_idParameter, old_asset_idParameter, new_domain_idParameter, new_codeParameter, change_inventoriesParameter, added_byParameter, link_duplicatedParameter, need_approvalParameter, approval_modify_aw_assetParameter);
        }
    
        public virtual ObjectResult<asset> duplicate_asset_new_code(Nullable<short> old_domain_id, Nullable<int> old_asset_id, Nullable<short> new_domain_id, string new_code, Nullable<bool> change_inventories, string added_by, Nullable<bool> link_duplicated, Nullable<bool> need_approval, Nullable<bool> approval_modify_aw_asset, MergeOption mergeOption)
        {
            var old_domain_idParameter = old_domain_id.HasValue ?
                new ObjectParameter("old_domain_id", old_domain_id) :
                new ObjectParameter("old_domain_id", typeof(short));
    
            var old_asset_idParameter = old_asset_id.HasValue ?
                new ObjectParameter("old_asset_id", old_asset_id) :
                new ObjectParameter("old_asset_id", typeof(int));
    
            var new_domain_idParameter = new_domain_id.HasValue ?
                new ObjectParameter("new_domain_id", new_domain_id) :
                new ObjectParameter("new_domain_id", typeof(short));
    
            var new_codeParameter = new_code != null ?
                new ObjectParameter("new_code", new_code) :
                new ObjectParameter("new_code", typeof(string));
    
            var change_inventoriesParameter = change_inventories.HasValue ?
                new ObjectParameter("change_inventories", change_inventories) :
                new ObjectParameter("change_inventories", typeof(bool));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var link_duplicatedParameter = link_duplicated.HasValue ?
                new ObjectParameter("link_duplicated", link_duplicated) :
                new ObjectParameter("link_duplicated", typeof(bool));
    
            var need_approvalParameter = need_approval.HasValue ?
                new ObjectParameter("need_approval", need_approval) :
                new ObjectParameter("need_approval", typeof(bool));
    
            var approval_modify_aw_assetParameter = approval_modify_aw_asset.HasValue ?
                new ObjectParameter("approval_modify_aw_asset", approval_modify_aw_asset) :
                new ObjectParameter("approval_modify_aw_asset", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asset>("duplicate_asset_new_code", mergeOption, old_domain_idParameter, old_asset_idParameter, new_domain_idParameter, new_codeParameter, change_inventoriesParameter, added_byParameter, link_duplicatedParameter, need_approvalParameter, approval_modify_aw_assetParameter);
        }
    
        public virtual int edit_assets_profile(Nullable<int> project_domain_id, Nullable<int> project_id, string old_profile, string old_profile_budget, Nullable<bool> old_detailed_budget, Nullable<int> inventory_id_new_profile)
        {
            var project_domain_idParameter = project_domain_id.HasValue ?
                new ObjectParameter("project_domain_id", project_domain_id) :
                new ObjectParameter("project_domain_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var old_profileParameter = old_profile != null ?
                new ObjectParameter("old_profile", old_profile) :
                new ObjectParameter("old_profile", typeof(string));
    
            var old_profile_budgetParameter = old_profile_budget != null ?
                new ObjectParameter("old_profile_budget", old_profile_budget) :
                new ObjectParameter("old_profile_budget", typeof(string));
    
            var old_detailed_budgetParameter = old_detailed_budget.HasValue ?
                new ObjectParameter("old_detailed_budget", old_detailed_budget) :
                new ObjectParameter("old_detailed_budget", typeof(bool));
    
            var inventory_id_new_profileParameter = inventory_id_new_profile.HasValue ?
                new ObjectParameter("inventory_id_new_profile", inventory_id_new_profile) :
                new ObjectParameter("inventory_id_new_profile", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_assets_profile", project_domain_idParameter, project_idParameter, old_profileParameter, old_profile_budgetParameter, old_detailed_budgetParameter, inventory_id_new_profileParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> filter_can_edit_options_item(string inventories_id)
        {
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("filter_can_edit_options_item", inventories_idParameter);
        }
    
        [DbFunction("audaxwareEntities", "fn_SUM_UNIT_PRICE")]
        public virtual IQueryable<Nullable<decimal>> fn_SUM_UNIT_PRICE(Nullable<int> inventory_id)
        {
            var inventory_idParameter = inventory_id.HasValue ?
                new ObjectParameter("inventory_id", inventory_id) :
                new ObjectParameter("inventory_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<decimal>>("[audaxwareEntities].[fn_SUM_UNIT_PRICE](@inventory_id)", inventory_idParameter);
        }
    
        public virtual ObjectResult<get_all_category_subcategories_Result> get_all_category_subcategories(Nullable<int> domain_id, Nullable<short> categories_domain_id, string categories_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            var categories_domain_idParameter = categories_domain_id.HasValue ?
                new ObjectParameter("categories_domain_id", categories_domain_id) :
                new ObjectParameter("categories_domain_id", typeof(short));
    
            var categories_idParameter = categories_id != null ?
                new ObjectParameter("categories_id", categories_id) :
                new ObjectParameter("categories_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_all_category_subcategories_Result>("get_all_category_subcategories", domain_idParameter, categories_domain_idParameter, categories_idParameter);
        }
    
        public virtual ObjectResult<get_doc_associations_names_Result> get_doc_associations_names(Nullable<short> project_domain_id, Nullable<int> project_id, Nullable<int> document_id)
        {
            var project_domain_idParameter = project_domain_id.HasValue ?
                new ObjectParameter("project_domain_id", project_domain_id) :
                new ObjectParameter("project_domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var document_idParameter = document_id.HasValue ?
                new ObjectParameter("document_id", document_id) :
                new ObjectParameter("document_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_doc_associations_names_Result>("get_doc_associations_names", project_domain_idParameter, project_idParameter, document_idParameter);
        }
    
        public virtual ObjectResult<get_global_profiles_not_project_Result> get_global_profiles_not_project(Nullable<short> project_domain_id, Nullable<int> project_id, Nullable<short> asset_domain_id, Nullable<int> asset_id)
        {
            var project_domain_idParameter = project_domain_id.HasValue ?
                new ObjectParameter("project_domain_id", project_domain_id) :
                new ObjectParameter("project_domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var asset_domain_idParameter = asset_domain_id.HasValue ?
                new ObjectParameter("asset_domain_id", asset_domain_id) :
                new ObjectParameter("asset_domain_id", typeof(short));
    
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_global_profiles_not_project_Result>("get_global_profiles_not_project", project_domain_idParameter, project_idParameter, asset_domain_idParameter, asset_idParameter);
        }
    
        public virtual ObjectResult<get_linked_inventories_Result> get_linked_inventories(string inventories_id)
        {
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_linked_inventories_Result>("get_linked_inventories", inventories_idParameter);
        }
    
        public virtual ObjectResult<get_max_asset_codes_Result> get_max_asset_codes(Nullable<int> domain_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_max_asset_codes_Result>("get_max_asset_codes", domain_idParameter);
        }
    
        public virtual ObjectResult<get_possible_associations_Result> get_possible_associations(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> document_id, string type)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var document_idParameter = document_id.HasValue ?
                new ObjectParameter("document_id", document_id) :
                new ObjectParameter("document_id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_possible_associations_Result>("get_possible_associations", domain_idParameter, project_idParameter, document_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<get_project_profiles_Result> get_project_profiles(Nullable<short> project_domain_id, Nullable<int> project_id, Nullable<short> asset_domain_id, Nullable<int> asset_id)
        {
            var project_domain_idParameter = project_domain_id.HasValue ?
                new ObjectParameter("project_domain_id", project_domain_id) :
                new ObjectParameter("project_domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var asset_domain_idParameter = asset_domain_id.HasValue ?
                new ObjectParameter("asset_domain_id", asset_domain_id) :
                new ObjectParameter("asset_domain_id", typeof(short));
    
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_project_profiles_Result>("get_project_profiles", project_domain_idParameter, project_idParameter, asset_domain_idParameter, asset_idParameter);
        }
    
        public virtual ObjectResult<get_shop_drawing_report_info_Result> get_shop_drawing_report_info(Nullable<short> domain_id, Nullable<int> project_id, string type)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_shop_drawing_report_info_Result>("get_shop_drawing_report_info", domain_idParameter, project_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<get_templates_Result> get_templates(Nullable<short> domain_id, Nullable<bool> show_audaxware, Nullable<int> project_id, Nullable<int> template_type)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var show_audaxwareParameter = show_audaxware.HasValue ?
                new ObjectParameter("show_audaxware", show_audaxware) :
                new ObjectParameter("show_audaxware", typeof(bool));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var template_typeParameter = template_type.HasValue ?
                new ObjectParameter("template_type", template_type) :
                new ObjectParameter("template_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_templates_Result>("get_templates", domain_idParameter, show_audaxwareParameter, project_idParameter, template_typeParameter);
        }
    
        public virtual int ins_po_asset(Nullable<short> domain_id, Nullable<int> project_id, Nullable<short> asset_domain_id, Nullable<int> asset_id, Nullable<int> po_id, string inventory_ids, Nullable<int> po_qty, Nullable<decimal> po_unit_amt, string added_by)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var asset_domain_idParameter = asset_domain_id.HasValue ?
                new ObjectParameter("asset_domain_id", asset_domain_id) :
                new ObjectParameter("asset_domain_id", typeof(short));
    
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(int));
    
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var inventory_idsParameter = inventory_ids != null ?
                new ObjectParameter("inventory_ids", inventory_ids) :
                new ObjectParameter("inventory_ids", typeof(string));
    
            var po_qtyParameter = po_qty.HasValue ?
                new ObjectParameter("po_qty", po_qty) :
                new ObjectParameter("po_qty", typeof(int));
    
            var po_unit_amtParameter = po_unit_amt.HasValue ?
                new ObjectParameter("po_unit_amt", po_unit_amt) :
                new ObjectParameter("po_unit_amt", typeof(decimal));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_po_asset", domain_idParameter, project_idParameter, asset_domain_idParameter, asset_idParameter, po_idParameter, inventory_idsParameter, po_qtyParameter, po_unit_amtParameter, added_byParameter);
        }
    
        public virtual ObjectResult<procurement_chart1_Result> procurement_chart1(Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> cost_center_id, Nullable<int> domain_id1, Nullable<int> domain_id2)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var cost_center_idParameter = cost_center_id.HasValue ?
                new ObjectParameter("cost_center_id", cost_center_id) :
                new ObjectParameter("cost_center_id", typeof(int));
    
            var domain_id1Parameter = domain_id1.HasValue ?
                new ObjectParameter("domain_id1", domain_id1) :
                new ObjectParameter("domain_id1", typeof(int));
    
            var domain_id2Parameter = domain_id2.HasValue ?
                new ObjectParameter("domain_id2", domain_id2) :
                new ObjectParameter("domain_id2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procurement_chart1_Result>("procurement_chart1", project_idParameter, phase_idParameter, department_idParameter, cost_center_idParameter, domain_id1Parameter, domain_id2Parameter);
        }
    
        public virtual ObjectResult<procurement_chart2_Result> procurement_chart2(Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> cost_center_id, Nullable<int> domain_id1, Nullable<int> domain_id2)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var cost_center_idParameter = cost_center_id.HasValue ?
                new ObjectParameter("cost_center_id", cost_center_id) :
                new ObjectParameter("cost_center_id", typeof(int));
    
            var domain_id1Parameter = domain_id1.HasValue ?
                new ObjectParameter("domain_id1", domain_id1) :
                new ObjectParameter("domain_id1", typeof(int));
    
            var domain_id2Parameter = domain_id2.HasValue ?
                new ObjectParameter("domain_id2", domain_id2) :
                new ObjectParameter("domain_id2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procurement_chart2_Result>("procurement_chart2", project_idParameter, phase_idParameter, department_idParameter, cost_center_idParameter, domain_id1Parameter, domain_id2Parameter);
        }
    
        public virtual int replace_inventory(Nullable<int> dOMAIN_ID, Nullable<int> pROJECT_ID, Nullable<int> iNVENTORY_ID, Nullable<int> nEW_ASSET_DOMAIN_ID, Nullable<int> nEW_ASSET_ID, string cOST_COL, Nullable<decimal> bUDGET, string rESP, ObjectParameter statusLog)
        {
            var dOMAIN_IDParameter = dOMAIN_ID.HasValue ?
                new ObjectParameter("DOMAIN_ID", dOMAIN_ID) :
                new ObjectParameter("DOMAIN_ID", typeof(int));
    
            var pROJECT_IDParameter = pROJECT_ID.HasValue ?
                new ObjectParameter("PROJECT_ID", pROJECT_ID) :
                new ObjectParameter("PROJECT_ID", typeof(int));
    
            var iNVENTORY_IDParameter = iNVENTORY_ID.HasValue ?
                new ObjectParameter("INVENTORY_ID", iNVENTORY_ID) :
                new ObjectParameter("INVENTORY_ID", typeof(int));
    
            var nEW_ASSET_DOMAIN_IDParameter = nEW_ASSET_DOMAIN_ID.HasValue ?
                new ObjectParameter("NEW_ASSET_DOMAIN_ID", nEW_ASSET_DOMAIN_ID) :
                new ObjectParameter("NEW_ASSET_DOMAIN_ID", typeof(int));
    
            var nEW_ASSET_IDParameter = nEW_ASSET_ID.HasValue ?
                new ObjectParameter("NEW_ASSET_ID", nEW_ASSET_ID) :
                new ObjectParameter("NEW_ASSET_ID", typeof(int));
    
            var cOST_COLParameter = cOST_COL != null ?
                new ObjectParameter("COST_COL", cOST_COL) :
                new ObjectParameter("COST_COL", typeof(string));
    
            var bUDGETParameter = bUDGET.HasValue ?
                new ObjectParameter("BUDGET", bUDGET) :
                new ObjectParameter("BUDGET", typeof(decimal));
    
            var rESPParameter = rESP != null ?
                new ObjectParameter("RESP", rESP) :
                new ObjectParameter("RESP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("replace_inventory", dOMAIN_IDParameter, pROJECT_IDParameter, iNVENTORY_IDParameter, nEW_ASSET_DOMAIN_IDParameter, nEW_ASSET_IDParameter, cOST_COLParameter, bUDGETParameter, rESPParameter, statusLog);
        }
    
        public virtual int replace_inventory_control(Nullable<int> pROJECT_ID, Nullable<int> pHASE_ID, Nullable<int> dEPARTMENT_ID, Nullable<int> rOOM_ID, Nullable<int> oLD_CODE, Nullable<int> oLD_DOMAIN_ID, Nullable<int> nEW_CODE, Nullable<int> nEW_DOMAIN_ID, string cOST_COL, Nullable<decimal> bUDGET, string rESP)
        {
            var pROJECT_IDParameter = pROJECT_ID.HasValue ?
                new ObjectParameter("PROJECT_ID", pROJECT_ID) :
                new ObjectParameter("PROJECT_ID", typeof(int));
    
            var pHASE_IDParameter = pHASE_ID.HasValue ?
                new ObjectParameter("PHASE_ID", pHASE_ID) :
                new ObjectParameter("PHASE_ID", typeof(int));
    
            var dEPARTMENT_IDParameter = dEPARTMENT_ID.HasValue ?
                new ObjectParameter("DEPARTMENT_ID", dEPARTMENT_ID) :
                new ObjectParameter("DEPARTMENT_ID", typeof(int));
    
            var rOOM_IDParameter = rOOM_ID.HasValue ?
                new ObjectParameter("ROOM_ID", rOOM_ID) :
                new ObjectParameter("ROOM_ID", typeof(int));
    
            var oLD_CODEParameter = oLD_CODE.HasValue ?
                new ObjectParameter("OLD_CODE", oLD_CODE) :
                new ObjectParameter("OLD_CODE", typeof(int));
    
            var oLD_DOMAIN_IDParameter = oLD_DOMAIN_ID.HasValue ?
                new ObjectParameter("OLD_DOMAIN_ID", oLD_DOMAIN_ID) :
                new ObjectParameter("OLD_DOMAIN_ID", typeof(int));
    
            var nEW_CODEParameter = nEW_CODE.HasValue ?
                new ObjectParameter("NEW_CODE", nEW_CODE) :
                new ObjectParameter("NEW_CODE", typeof(int));
    
            var nEW_DOMAIN_IDParameter = nEW_DOMAIN_ID.HasValue ?
                new ObjectParameter("NEW_DOMAIN_ID", nEW_DOMAIN_ID) :
                new ObjectParameter("NEW_DOMAIN_ID", typeof(int));
    
            var cOST_COLParameter = cOST_COL != null ?
                new ObjectParameter("COST_COL", cOST_COL) :
                new ObjectParameter("COST_COL", typeof(string));
    
            var bUDGETParameter = bUDGET.HasValue ?
                new ObjectParameter("BUDGET", bUDGET) :
                new ObjectParameter("BUDGET", typeof(decimal));
    
            var rESPParameter = rESP != null ?
                new ObjectParameter("RESP", rESP) :
                new ObjectParameter("RESP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("replace_inventory_control", pROJECT_IDParameter, pHASE_IDParameter, dEPARTMENT_IDParameter, rOOM_IDParameter, oLD_CODEParameter, oLD_DOMAIN_IDParameter, nEW_CODEParameter, nEW_DOMAIN_IDParameter, cOST_COLParameter, bUDGETParameter, rESPParameter);
        }
    
        public virtual ObjectResult<room_inventory_po_Result> room_inventory_po(Nullable<int> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<room_inventory_po_Result>("room_inventory_po", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter);
        }
    
        public virtual int split_rooms(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<short> from_domain_id, Nullable<int> from_project_id, Nullable<int> from_phase_id, Nullable<int> from_department_id, Nullable<int> from_room_id, string added_by, Nullable<bool> is_linked_template, string template_room_name, string room_name, string room_number)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var from_domain_idParameter = from_domain_id.HasValue ?
                new ObjectParameter("from_domain_id", from_domain_id) :
                new ObjectParameter("from_domain_id", typeof(short));
    
            var from_project_idParameter = from_project_id.HasValue ?
                new ObjectParameter("from_project_id", from_project_id) :
                new ObjectParameter("from_project_id", typeof(int));
    
            var from_phase_idParameter = from_phase_id.HasValue ?
                new ObjectParameter("from_phase_id", from_phase_id) :
                new ObjectParameter("from_phase_id", typeof(int));
    
            var from_department_idParameter = from_department_id.HasValue ?
                new ObjectParameter("from_department_id", from_department_id) :
                new ObjectParameter("from_department_id", typeof(int));
    
            var from_room_idParameter = from_room_id.HasValue ?
                new ObjectParameter("from_room_id", from_room_id) :
                new ObjectParameter("from_room_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var is_linked_templateParameter = is_linked_template.HasValue ?
                new ObjectParameter("is_linked_template", is_linked_template) :
                new ObjectParameter("is_linked_template", typeof(bool));
    
            var template_room_nameParameter = template_room_name != null ?
                new ObjectParameter("template_room_name", template_room_name) :
                new ObjectParameter("template_room_name", typeof(string));
    
            var room_nameParameter = room_name != null ?
                new ObjectParameter("room_name", room_name) :
                new ObjectParameter("room_name", typeof(string));
    
            var room_numberParameter = room_number != null ?
                new ObjectParameter("room_number", room_number) :
                new ObjectParameter("room_number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("split_rooms", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, from_domain_idParameter, from_project_idParameter, from_phase_idParameter, from_department_idParameter, from_room_idParameter, added_byParameter, is_linked_templateParameter, template_room_nameParameter, room_nameParameter, room_numberParameter);
        }
    
        [DbFunction("audaxwareEntities", "string_list_to_table")]
        public virtual IQueryable<string_list_to_table_Result> string_list_to_table(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string_list_to_table_Result>("[audaxwareEntities].[string_list_to_table](@List)", listParameter);
        }
    
        public virtual int upd_detailed_budget_profile(string inventories_id, Nullable<bool> detailed_budget)
        {
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            var detailed_budgetParameter = detailed_budget.HasValue ?
                new ObjectParameter("detailed_budget", detailed_budget) :
                new ObjectParameter("detailed_budget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upd_detailed_budget_profile", inventories_idParameter, detailed_budgetParameter);
        }
    
        public virtual int update_cost(Nullable<short> po_domain_id, Nullable<int> project_id, Nullable<short> asset_domain_id, Nullable<int> asset_id, Nullable<int> po_id, Nullable<int> inventory_id, Nullable<decimal> unit_amt)
        {
            var po_domain_idParameter = po_domain_id.HasValue ?
                new ObjectParameter("po_domain_id", po_domain_id) :
                new ObjectParameter("po_domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var asset_domain_idParameter = asset_domain_id.HasValue ?
                new ObjectParameter("asset_domain_id", asset_domain_id) :
                new ObjectParameter("asset_domain_id", typeof(short));
    
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(int));
    
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var inventory_idParameter = inventory_id.HasValue ?
                new ObjectParameter("inventory_id", inventory_id) :
                new ObjectParameter("inventory_id", typeof(int));
    
            var unit_amtParameter = unit_amt.HasValue ?
                new ObjectParameter("unit_amt", unit_amt) :
                new ObjectParameter("unit_amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_cost", po_domain_idParameter, project_idParameter, asset_domain_idParameter, asset_idParameter, po_idParameter, inventory_idParameter, unit_amtParameter);
        }
    
        public virtual int update_inventories_option(Nullable<short> domain_id, string inventories_id, Nullable<int> option_id, Nullable<int> quantity, Nullable<decimal> unit_price)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            var option_idParameter = option_id.HasValue ?
                new ObjectParameter("option_id", option_id) :
                new ObjectParameter("option_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var unit_priceParameter = unit_price.HasValue ?
                new ObjectParameter("unit_price", unit_price) :
                new ObjectParameter("unit_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_inventories_option", domain_idParameter, inventories_idParameter, option_idParameter, quantityParameter, unit_priceParameter);
        }
    
        public virtual int update_link_inventory(Nullable<short> domain_id, Nullable<int> from_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var from_idParameter = from_id.HasValue ?
                new ObjectParameter("from_id", from_id) :
                new ObjectParameter("from_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_link_inventory", domain_idParameter, from_idParameter);
        }
    
        public virtual int update_user_projects(string userId, Nullable<short> projects_domain_id, string projects_id, string role_id)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var projects_domain_idParameter = projects_domain_id.HasValue ?
                new ObjectParameter("projects_domain_id", projects_domain_id) :
                new ObjectParameter("projects_domain_id", typeof(short));
    
            var projects_idParameter = projects_id != null ?
                new ObjectParameter("projects_id", projects_id) :
                new ObjectParameter("projects_id", typeof(string));
    
            var role_idParameter = role_id != null ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_user_projects", userIdParameter, projects_domain_idParameter, projects_idParameter, role_idParameter);
        }
    
        [DbFunction("audaxwareEntities", "enterpriseAccessPredicate")]
        public virtual IQueryable<Nullable<int>> enterpriseAccessPredicate(Nullable<short> domain_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[audaxwareEntities].[enterpriseAccessPredicate](@domain_id)", domain_idParameter);
        }
    
        [DbFunction("audaxwareEntities", "enterpriseAccessPredicateWithAudaxwareDomain")]
        public virtual IQueryable<Nullable<int>> enterpriseAccessPredicateWithAudaxwareDomain(Nullable<short> domain_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[audaxwareEntities].[enterpriseAccessPredicateWithAudaxwareDomain](@domain_id)", domain_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> add_asset_option(Nullable<short> domain_id, string code, string data_type, string description, Nullable<decimal> min_cost, Nullable<decimal> max_cost, Nullable<decimal> unit_budget, Nullable<short> asset_domain_id, Nullable<int> asset_id, string added_by, string settings, Nullable<int> scope, Nullable<short> project_domain_id, Nullable<int> project_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var data_typeParameter = data_type != null ?
                new ObjectParameter("data_type", data_type) :
                new ObjectParameter("data_type", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var min_costParameter = min_cost.HasValue ?
                new ObjectParameter("min_cost", min_cost) :
                new ObjectParameter("min_cost", typeof(decimal));
    
            var max_costParameter = max_cost.HasValue ?
                new ObjectParameter("max_cost", max_cost) :
                new ObjectParameter("max_cost", typeof(decimal));
    
            var unit_budgetParameter = unit_budget.HasValue ?
                new ObjectParameter("unit_budget", unit_budget) :
                new ObjectParameter("unit_budget", typeof(decimal));
    
            var asset_domain_idParameter = asset_domain_id.HasValue ?
                new ObjectParameter("asset_domain_id", asset_domain_id) :
                new ObjectParameter("asset_domain_id", typeof(short));
    
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var settingsParameter = settings != null ?
                new ObjectParameter("settings", settings) :
                new ObjectParameter("settings", typeof(string));
    
            var scopeParameter = scope.HasValue ?
                new ObjectParameter("scope", scope) :
                new ObjectParameter("scope", typeof(int));
    
            var project_domain_idParameter = project_domain_id.HasValue ?
                new ObjectParameter("project_domain_id", project_domain_id) :
                new ObjectParameter("project_domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("add_asset_option", domain_idParameter, codeParameter, data_typeParameter, descriptionParameter, min_costParameter, max_costParameter, unit_budgetParameter, asset_domain_idParameter, asset_idParameter, added_byParameter, settingsParameter, scopeParameter, project_domain_idParameter, project_idParameter);
        }
    
        public virtual int delete_asset_option_picture(Nullable<short> domain_id, Nullable<int> asset_option_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var asset_option_idParameter = asset_option_id.HasValue ?
                new ObjectParameter("asset_option_id", asset_option_id) :
                new ObjectParameter("asset_option_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_asset_option_picture", domain_idParameter, asset_option_idParameter);
        }
    
        public virtual ObjectResult<get_financials_Result> get_financials(Nullable<int> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_financials_Result>("get_financials", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter);
        }
    
        public virtual int copy_inventory_item(Nullable<short> from_domain_id, Nullable<int> from_id, Nullable<int> update_to_id, Nullable<int> insert_to_project_id, Nullable<int> insert_to_phase_id, Nullable<int> insert_to_department_id, Nullable<int> insert_to_room_id, Nullable<short> insert_to_domain_id, string budget, string added_by, Nullable<int> mode, Nullable<bool> copy_options)
        {
            var from_domain_idParameter = from_domain_id.HasValue ?
                new ObjectParameter("from_domain_id", from_domain_id) :
                new ObjectParameter("from_domain_id", typeof(short));
    
            var from_idParameter = from_id.HasValue ?
                new ObjectParameter("from_id", from_id) :
                new ObjectParameter("from_id", typeof(int));
    
            var update_to_idParameter = update_to_id.HasValue ?
                new ObjectParameter("update_to_id", update_to_id) :
                new ObjectParameter("update_to_id", typeof(int));
    
            var insert_to_project_idParameter = insert_to_project_id.HasValue ?
                new ObjectParameter("insert_to_project_id", insert_to_project_id) :
                new ObjectParameter("insert_to_project_id", typeof(int));
    
            var insert_to_phase_idParameter = insert_to_phase_id.HasValue ?
                new ObjectParameter("insert_to_phase_id", insert_to_phase_id) :
                new ObjectParameter("insert_to_phase_id", typeof(int));
    
            var insert_to_department_idParameter = insert_to_department_id.HasValue ?
                new ObjectParameter("insert_to_department_id", insert_to_department_id) :
                new ObjectParameter("insert_to_department_id", typeof(int));
    
            var insert_to_room_idParameter = insert_to_room_id.HasValue ?
                new ObjectParameter("insert_to_room_id", insert_to_room_id) :
                new ObjectParameter("insert_to_room_id", typeof(int));
    
            var insert_to_domain_idParameter = insert_to_domain_id.HasValue ?
                new ObjectParameter("insert_to_domain_id", insert_to_domain_id) :
                new ObjectParameter("insert_to_domain_id", typeof(short));
    
            var budgetParameter = budget != null ?
                new ObjectParameter("budget", budget) :
                new ObjectParameter("budget", typeof(string));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(int));
    
            var copy_optionsParameter = copy_options.HasValue ?
                new ObjectParameter("copy_options", copy_options) :
                new ObjectParameter("copy_options", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_inventory_item", from_domain_idParameter, from_idParameter, update_to_idParameter, insert_to_project_idParameter, insert_to_phase_idParameter, insert_to_department_idParameter, insert_to_room_idParameter, insert_to_domain_idParameter, budgetParameter, added_byParameter, modeParameter, copy_optionsParameter);
        }
    
        public virtual int apply_template(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<int> template_id, string cost_col, string added_by, Nullable<bool> delete_equipment, Nullable<bool> linked_template)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var template_idParameter = template_id.HasValue ?
                new ObjectParameter("template_id", template_id) :
                new ObjectParameter("template_id", typeof(int));
    
            var cost_colParameter = cost_col != null ?
                new ObjectParameter("cost_col", cost_col) :
                new ObjectParameter("cost_col", typeof(string));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var delete_equipmentParameter = delete_equipment.HasValue ?
                new ObjectParameter("delete_equipment", delete_equipment) :
                new ObjectParameter("delete_equipment", typeof(bool));
    
            var linked_templateParameter = linked_template.HasValue ?
                new ObjectParameter("linked_template", linked_template) :
                new ObjectParameter("linked_template", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apply_template", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, template_idParameter, cost_colParameter, added_byParameter, delete_equipmentParameter, linked_templateParameter);
        }
    
        public virtual int update_inventory_by_project_jsn(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> inventory_id, string jsn_code, string resp)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var inventory_idParameter = inventory_id.HasValue ?
                new ObjectParameter("inventory_id", inventory_id) :
                new ObjectParameter("inventory_id", typeof(int));
    
            var jsn_codeParameter = jsn_code != null ?
                new ObjectParameter("jsn_code", jsn_code) :
                new ObjectParameter("jsn_code", typeof(string));
    
            var respParameter = resp != null ?
                new ObjectParameter("resp", resp) :
                new ObjectParameter("resp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_inventory_by_project_jsn", domain_idParameter, project_idParameter, inventory_idParameter, jsn_codeParameter, respParameter);
        }
    
        public virtual ObjectResult<string> copy_po(Nullable<short> domainId, Nullable<int> projectId, Nullable<short> newDomainId, Nullable<int> newProjectId, string addedBy)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(short));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            var newDomainIdParameter = newDomainId.HasValue ?
                new ObjectParameter("newDomainId", newDomainId) :
                new ObjectParameter("newDomainId", typeof(short));
    
            var newProjectIdParameter = newProjectId.HasValue ?
                new ObjectParameter("newProjectId", newProjectId) :
                new ObjectParameter("newProjectId", typeof(int));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("copy_po", domainIdParameter, projectIdParameter, newDomainIdParameter, newProjectIdParameter, addedByParameter);
        }
    
        public virtual int copy_po_inventory(Nullable<short> domainId, Nullable<int> projectId, Nullable<short> newDomainId, Nullable<int> newProjectId, string addedBy)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(short));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            var newDomainIdParameter = newDomainId.HasValue ?
                new ObjectParameter("newDomainId", newDomainId) :
                new ObjectParameter("newDomainId", typeof(short));
    
            var newProjectIdParameter = newProjectId.HasValue ?
                new ObjectParameter("newProjectId", newProjectId) :
                new ObjectParameter("newProjectId", typeof(int));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_po_inventory", domainIdParameter, projectIdParameter, newDomainIdParameter, newProjectIdParameter, addedByParameter);
        }
    
        public virtual ObjectResult<get_asset_rooms_Result> get_asset_rooms(Nullable<int> projectId, Nullable<int> domainId, string assetIds, Nullable<int> phaseId, Nullable<int> departmentId, Nullable<int> roomId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("DomainId", domainId) :
                new ObjectParameter("DomainId", typeof(int));
    
            var assetIdsParameter = assetIds != null ?
                new ObjectParameter("AssetIds", assetIds) :
                new ObjectParameter("AssetIds", typeof(string));
    
            var phaseIdParameter = phaseId.HasValue ?
                new ObjectParameter("PhaseId", phaseId) :
                new ObjectParameter("PhaseId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_asset_rooms_Result>("get_asset_rooms", projectIdParameter, domainIdParameter, assetIdsParameter, phaseIdParameter, departmentIdParameter, roomIdParameter);
        }
    
        public virtual int update_inventories_cutsheet_filename(string inventories_id, string cut_sheet_filename)
        {
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            var cut_sheet_filenameParameter = cut_sheet_filename != null ?
                new ObjectParameter("cut_sheet_filename", cut_sheet_filename) :
                new ObjectParameter("cut_sheet_filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_inventories_cutsheet_filename", inventories_idParameter, cut_sheet_filenameParameter);
        }
    
        public virtual int clean_user_projects(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clean_user_projects", userIdParameter);
        }
    
        public virtual int update_domain_manufacturers(Nullable<short> domain_id, Nullable<short> manufacturers_domain_id, string manufacturers_ids)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var manufacturers_domain_idParameter = manufacturers_domain_id.HasValue ?
                new ObjectParameter("manufacturers_domain_id", manufacturers_domain_id) :
                new ObjectParameter("manufacturers_domain_id", typeof(short));
    
            var manufacturers_idsParameter = manufacturers_ids != null ?
                new ObjectParameter("manufacturers_ids", manufacturers_ids) :
                new ObjectParameter("manufacturers_ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_domain_manufacturers", domain_idParameter, manufacturers_domain_idParameter, manufacturers_idsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_manufacturers_id_from_domain(Nullable<short> domain_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_manufacturers_id_from_domain", domain_idParameter);
        }
    
        public virtual ObjectResult<get_associated_manufacturers_Result> get_associated_manufacturers(Nullable<short> domain_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_associated_manufacturers_Result>("get_associated_manufacturers", domain_idParameter);
        }
    
        public virtual ObjectResult<get_related_assets_Result> get_related_assets(Nullable<int> rELATED_ASSET_ID, Nullable<short> rELATED_DOMAIN_ID)
        {
            var rELATED_ASSET_IDParameter = rELATED_ASSET_ID.HasValue ?
                new ObjectParameter("RELATED_ASSET_ID", rELATED_ASSET_ID) :
                new ObjectParameter("RELATED_ASSET_ID", typeof(int));
    
            var rELATED_DOMAIN_IDParameter = rELATED_DOMAIN_ID.HasValue ?
                new ObjectParameter("RELATED_DOMAIN_ID", rELATED_DOMAIN_ID) :
                new ObjectParameter("RELATED_DOMAIN_ID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_related_assets_Result>("get_related_assets", rELATED_ASSET_IDParameter, rELATED_DOMAIN_IDParameter);
        }
    
        public virtual int delete_asset_and_related_asset(Nullable<int> asset_id, Nullable<short> domain_id)
        {
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(int));
    
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_asset_and_related_asset", asset_idParameter, domain_idParameter);
        }
    
        public virtual ObjectResult<get_expirated_pos_Result> get_expirated_pos(string userId, Nullable<short> domainId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_expirated_pos_Result>("get_expirated_pos", userIdParameter, domainIdParameter);
        }
    
        public virtual int copy_inventory(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<short> copy_domain_id, Nullable<int> copy_project_id, Nullable<int> copy_phase_id, Nullable<int> copy_department_id, Nullable<int> copy_room_id, string added_by, Nullable<bool> copy_opt_col, Nullable<int> linked_id_template, Nullable<bool> from_project, Nullable<bool> is_move, ObjectParameter return_var)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var copy_domain_idParameter = copy_domain_id.HasValue ?
                new ObjectParameter("copy_domain_id", copy_domain_id) :
                new ObjectParameter("copy_domain_id", typeof(short));
    
            var copy_project_idParameter = copy_project_id.HasValue ?
                new ObjectParameter("copy_project_id", copy_project_id) :
                new ObjectParameter("copy_project_id", typeof(int));
    
            var copy_phase_idParameter = copy_phase_id.HasValue ?
                new ObjectParameter("copy_phase_id", copy_phase_id) :
                new ObjectParameter("copy_phase_id", typeof(int));
    
            var copy_department_idParameter = copy_department_id.HasValue ?
                new ObjectParameter("copy_department_id", copy_department_id) :
                new ObjectParameter("copy_department_id", typeof(int));
    
            var copy_room_idParameter = copy_room_id.HasValue ?
                new ObjectParameter("copy_room_id", copy_room_id) :
                new ObjectParameter("copy_room_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var copy_opt_colParameter = copy_opt_col.HasValue ?
                new ObjectParameter("copy_opt_col", copy_opt_col) :
                new ObjectParameter("copy_opt_col", typeof(bool));
    
            var linked_id_templateParameter = linked_id_template.HasValue ?
                new ObjectParameter("linked_id_template", linked_id_template) :
                new ObjectParameter("linked_id_template", typeof(int));
    
            var from_projectParameter = from_project.HasValue ?
                new ObjectParameter("from_project", from_project) :
                new ObjectParameter("from_project", typeof(bool));
    
            var is_moveParameter = is_move.HasValue ?
                new ObjectParameter("is_move", is_move) :
                new ObjectParameter("is_move", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_inventory", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, copy_domain_idParameter, copy_project_idParameter, copy_phase_idParameter, copy_department_idParameter, copy_room_idParameter, added_byParameter, copy_opt_colParameter, linked_id_templateParameter, from_projectParameter, is_moveParameter, return_var);
        }
    
        public virtual int copy_rooms(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<short> copy_domain_id, Nullable<int> copy_project_id, Nullable<int> copy_phase_id, Nullable<int> copy_department_id, Nullable<int> copy_room_id, string added_by, Nullable<bool> copy_opt_col, string room_name, string room_number, Nullable<int> template_id, Nullable<bool> split_room, Nullable<bool> from_project, Nullable<bool> is_move, ObjectParameter return_var)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var copy_domain_idParameter = copy_domain_id.HasValue ?
                new ObjectParameter("copy_domain_id", copy_domain_id) :
                new ObjectParameter("copy_domain_id", typeof(short));
    
            var copy_project_idParameter = copy_project_id.HasValue ?
                new ObjectParameter("copy_project_id", copy_project_id) :
                new ObjectParameter("copy_project_id", typeof(int));
    
            var copy_phase_idParameter = copy_phase_id.HasValue ?
                new ObjectParameter("copy_phase_id", copy_phase_id) :
                new ObjectParameter("copy_phase_id", typeof(int));
    
            var copy_department_idParameter = copy_department_id.HasValue ?
                new ObjectParameter("copy_department_id", copy_department_id) :
                new ObjectParameter("copy_department_id", typeof(int));
    
            var copy_room_idParameter = copy_room_id.HasValue ?
                new ObjectParameter("copy_room_id", copy_room_id) :
                new ObjectParameter("copy_room_id", typeof(int));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var copy_opt_colParameter = copy_opt_col.HasValue ?
                new ObjectParameter("copy_opt_col", copy_opt_col) :
                new ObjectParameter("copy_opt_col", typeof(bool));
    
            var room_nameParameter = room_name != null ?
                new ObjectParameter("room_name", room_name) :
                new ObjectParameter("room_name", typeof(string));
    
            var room_numberParameter = room_number != null ?
                new ObjectParameter("room_number", room_number) :
                new ObjectParameter("room_number", typeof(string));
    
            var template_idParameter = template_id.HasValue ?
                new ObjectParameter("template_id", template_id) :
                new ObjectParameter("template_id", typeof(int));
    
            var split_roomParameter = split_room.HasValue ?
                new ObjectParameter("split_room", split_room) :
                new ObjectParameter("split_room", typeof(bool));
    
            var from_projectParameter = from_project.HasValue ?
                new ObjectParameter("from_project", from_project) :
                new ObjectParameter("from_project", typeof(bool));
    
            var is_moveParameter = is_move.HasValue ?
                new ObjectParameter("is_move", is_move) :
                new ObjectParameter("is_move", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_rooms", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, copy_domain_idParameter, copy_project_idParameter, copy_phase_idParameter, copy_department_idParameter, copy_room_idParameter, added_byParameter, copy_opt_colParameter, room_nameParameter, room_numberParameter, template_idParameter, split_roomParameter, from_projectParameter, is_moveParameter, return_var);
        }
    
        public virtual ObjectResult<Get_PO_assigned_assets_Result> Get_PO_assigned_assets(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> po_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_PO_assigned_assets_Result>("Get_PO_assigned_assets", domain_idParameter, project_idParameter, po_idParameter);
        }
    
        public virtual ObjectResult<get_available_assets_to_PO_Result> get_available_assets_to_PO(Nullable<int> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<bool> allow_unapproved)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var allow_unapprovedParameter = allow_unapproved.HasValue ?
                new ObjectParameter("allow_unapproved", allow_unapproved) :
                new ObjectParameter("allow_unapproved", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_available_assets_to_PO_Result>("get_available_assets_to_PO", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, allow_unapprovedParameter);
        }
    
        public virtual ObjectResult<edit_multi_asset_Result> edit_multi_asset(string inventories_id, string resp, string current_location, Nullable<int> cost_center_id, Nullable<System.DateTime> estimated_delivery_date, string comment, string tag, string cad_id, Nullable<decimal> unit_budget, Nullable<bool> none_option, Nullable<bool> detailed_budget, Nullable<int> lead_time, string clin, Nullable<decimal> unit_markup, Nullable<decimal> unit_freight_net, Nullable<decimal> unit_freight_markup, Nullable<decimal> unit_escalation, Nullable<decimal> unit_install_net, Nullable<decimal> unit_install_markup, Nullable<decimal> unit_tax, string eCN, string placement, Nullable<bool> placement_ow, string temporary_location, Nullable<bool> biomed_check_required, string asset_description, Nullable<bool> asset_description_aw, Nullable<int> budget_qty, Nullable<int> lease_qty, Nullable<int> dnp_qty, Nullable<bool> jsn_ow, string manufacturer_description, Nullable<bool> manufacturer_description_ow, string model_number, Nullable<bool> model_number_ow, string model_name, Nullable<bool> model_name_ow, string jsn_code, string jsn_u1, string jsn_u2, string jsn_u3, string jsn_u4, string jsn_u5, string jsn_u6, string jsn_u7, Nullable<int> @class, Nullable<bool> class_ow, string final_disposition, Nullable<System.DateTime> delivered_date, Nullable<System.DateTime> received_date)
        {
            var inventories_idParameter = inventories_id != null ?
                new ObjectParameter("inventories_id", inventories_id) :
                new ObjectParameter("inventories_id", typeof(string));
    
            var respParameter = resp != null ?
                new ObjectParameter("resp", resp) :
                new ObjectParameter("resp", typeof(string));
    
            var current_locationParameter = current_location != null ?
                new ObjectParameter("current_location", current_location) :
                new ObjectParameter("current_location", typeof(string));
    
            var cost_center_idParameter = cost_center_id.HasValue ?
                new ObjectParameter("cost_center_id", cost_center_id) :
                new ObjectParameter("cost_center_id", typeof(int));
    
            var estimated_delivery_dateParameter = estimated_delivery_date.HasValue ?
                new ObjectParameter("estimated_delivery_date", estimated_delivery_date) :
                new ObjectParameter("estimated_delivery_date", typeof(System.DateTime));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var cad_idParameter = cad_id != null ?
                new ObjectParameter("cad_id", cad_id) :
                new ObjectParameter("cad_id", typeof(string));
    
            var unit_budgetParameter = unit_budget.HasValue ?
                new ObjectParameter("unit_budget", unit_budget) :
                new ObjectParameter("unit_budget", typeof(decimal));
    
            var none_optionParameter = none_option.HasValue ?
                new ObjectParameter("none_option", none_option) :
                new ObjectParameter("none_option", typeof(bool));
    
            var detailed_budgetParameter = detailed_budget.HasValue ?
                new ObjectParameter("detailed_budget", detailed_budget) :
                new ObjectParameter("detailed_budget", typeof(bool));
    
            var lead_timeParameter = lead_time.HasValue ?
                new ObjectParameter("lead_time", lead_time) :
                new ObjectParameter("lead_time", typeof(int));
    
            var clinParameter = clin != null ?
                new ObjectParameter("clin", clin) :
                new ObjectParameter("clin", typeof(string));
    
            var unit_markupParameter = unit_markup.HasValue ?
                new ObjectParameter("unit_markup", unit_markup) :
                new ObjectParameter("unit_markup", typeof(decimal));
    
            var unit_freight_netParameter = unit_freight_net.HasValue ?
                new ObjectParameter("unit_freight_net", unit_freight_net) :
                new ObjectParameter("unit_freight_net", typeof(decimal));
    
            var unit_freight_markupParameter = unit_freight_markup.HasValue ?
                new ObjectParameter("unit_freight_markup", unit_freight_markup) :
                new ObjectParameter("unit_freight_markup", typeof(decimal));
    
            var unit_escalationParameter = unit_escalation.HasValue ?
                new ObjectParameter("unit_escalation", unit_escalation) :
                new ObjectParameter("unit_escalation", typeof(decimal));
    
            var unit_install_netParameter = unit_install_net.HasValue ?
                new ObjectParameter("unit_install_net", unit_install_net) :
                new ObjectParameter("unit_install_net", typeof(decimal));
    
            var unit_install_markupParameter = unit_install_markup.HasValue ?
                new ObjectParameter("unit_install_markup", unit_install_markup) :
                new ObjectParameter("unit_install_markup", typeof(decimal));
    
            var unit_taxParameter = unit_tax.HasValue ?
                new ObjectParameter("unit_tax", unit_tax) :
                new ObjectParameter("unit_tax", typeof(decimal));
    
            var eCNParameter = eCN != null ?
                new ObjectParameter("ECN", eCN) :
                new ObjectParameter("ECN", typeof(string));
    
            var placementParameter = placement != null ?
                new ObjectParameter("placement", placement) :
                new ObjectParameter("placement", typeof(string));
    
            var placement_owParameter = placement_ow.HasValue ?
                new ObjectParameter("placement_ow", placement_ow) :
                new ObjectParameter("placement_ow", typeof(bool));
    
            var temporary_locationParameter = temporary_location != null ?
                new ObjectParameter("temporary_location", temporary_location) :
                new ObjectParameter("temporary_location", typeof(string));
    
            var biomed_check_requiredParameter = biomed_check_required.HasValue ?
                new ObjectParameter("biomed_check_required", biomed_check_required) :
                new ObjectParameter("biomed_check_required", typeof(bool));
    
            var asset_descriptionParameter = asset_description != null ?
                new ObjectParameter("asset_description", asset_description) :
                new ObjectParameter("asset_description", typeof(string));
    
            var asset_description_awParameter = asset_description_aw.HasValue ?
                new ObjectParameter("asset_description_aw", asset_description_aw) :
                new ObjectParameter("asset_description_aw", typeof(bool));
    
            var budget_qtyParameter = budget_qty.HasValue ?
                new ObjectParameter("budget_qty", budget_qty) :
                new ObjectParameter("budget_qty", typeof(int));
    
            var lease_qtyParameter = lease_qty.HasValue ?
                new ObjectParameter("lease_qty", lease_qty) :
                new ObjectParameter("lease_qty", typeof(int));
    
            var dnp_qtyParameter = dnp_qty.HasValue ?
                new ObjectParameter("dnp_qty", dnp_qty) :
                new ObjectParameter("dnp_qty", typeof(int));
    
            var jsn_owParameter = jsn_ow.HasValue ?
                new ObjectParameter("jsn_ow", jsn_ow) :
                new ObjectParameter("jsn_ow", typeof(bool));
    
            var manufacturer_descriptionParameter = manufacturer_description != null ?
                new ObjectParameter("manufacturer_description", manufacturer_description) :
                new ObjectParameter("manufacturer_description", typeof(string));
    
            var manufacturer_description_owParameter = manufacturer_description_ow.HasValue ?
                new ObjectParameter("manufacturer_description_ow", manufacturer_description_ow) :
                new ObjectParameter("manufacturer_description_ow", typeof(bool));
    
            var model_numberParameter = model_number != null ?
                new ObjectParameter("model_number", model_number) :
                new ObjectParameter("model_number", typeof(string));
    
            var model_number_owParameter = model_number_ow.HasValue ?
                new ObjectParameter("model_number_ow", model_number_ow) :
                new ObjectParameter("model_number_ow", typeof(bool));
    
            var model_nameParameter = model_name != null ?
                new ObjectParameter("model_name", model_name) :
                new ObjectParameter("model_name", typeof(string));
    
            var model_name_owParameter = model_name_ow.HasValue ?
                new ObjectParameter("model_name_ow", model_name_ow) :
                new ObjectParameter("model_name_ow", typeof(bool));
    
            var jsn_codeParameter = jsn_code != null ?
                new ObjectParameter("jsn_code", jsn_code) :
                new ObjectParameter("jsn_code", typeof(string));
    
            var jsn_u1Parameter = jsn_u1 != null ?
                new ObjectParameter("jsn_u1", jsn_u1) :
                new ObjectParameter("jsn_u1", typeof(string));
    
            var jsn_u2Parameter = jsn_u2 != null ?
                new ObjectParameter("jsn_u2", jsn_u2) :
                new ObjectParameter("jsn_u2", typeof(string));
    
            var jsn_u3Parameter = jsn_u3 != null ?
                new ObjectParameter("jsn_u3", jsn_u3) :
                new ObjectParameter("jsn_u3", typeof(string));
    
            var jsn_u4Parameter = jsn_u4 != null ?
                new ObjectParameter("jsn_u4", jsn_u4) :
                new ObjectParameter("jsn_u4", typeof(string));
    
            var jsn_u5Parameter = jsn_u5 != null ?
                new ObjectParameter("jsn_u5", jsn_u5) :
                new ObjectParameter("jsn_u5", typeof(string));
    
            var jsn_u6Parameter = jsn_u6 != null ?
                new ObjectParameter("jsn_u6", jsn_u6) :
                new ObjectParameter("jsn_u6", typeof(string));
    
            var jsn_u7Parameter = jsn_u7 != null ?
                new ObjectParameter("jsn_u7", jsn_u7) :
                new ObjectParameter("jsn_u7", typeof(string));
    
            var classParameter = @class.HasValue ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(int));
    
            var class_owParameter = class_ow.HasValue ?
                new ObjectParameter("class_ow", class_ow) :
                new ObjectParameter("class_ow", typeof(bool));
    
            var final_dispositionParameter = final_disposition != null ?
                new ObjectParameter("final_disposition", final_disposition) :
                new ObjectParameter("final_disposition", typeof(string));
    
            var delivered_dateParameter = delivered_date.HasValue ?
                new ObjectParameter("delivered_date", delivered_date) :
                new ObjectParameter("delivered_date", typeof(System.DateTime));
    
            var received_dateParameter = received_date.HasValue ?
                new ObjectParameter("received_date", received_date) :
                new ObjectParameter("received_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<edit_multi_asset_Result>("edit_multi_asset", inventories_idParameter, respParameter, current_locationParameter, cost_center_idParameter, estimated_delivery_dateParameter, commentParameter, tagParameter, cad_idParameter, unit_budgetParameter, none_optionParameter, detailed_budgetParameter, lead_timeParameter, clinParameter, unit_markupParameter, unit_freight_netParameter, unit_freight_markupParameter, unit_escalationParameter, unit_install_netParameter, unit_install_markupParameter, unit_taxParameter, eCNParameter, placementParameter, placement_owParameter, temporary_locationParameter, biomed_check_requiredParameter, asset_descriptionParameter, asset_description_awParameter, budget_qtyParameter, lease_qtyParameter, dnp_qtyParameter, jsn_owParameter, manufacturer_descriptionParameter, manufacturer_description_owParameter, model_numberParameter, model_number_owParameter, model_nameParameter, model_name_owParameter, jsn_codeParameter, jsn_u1Parameter, jsn_u2Parameter, jsn_u3Parameter, jsn_u4Parameter, jsn_u5Parameter, jsn_u6Parameter, jsn_u7Parameter, classParameter, class_owParameter, final_dispositionParameter, delivered_dateParameter, received_dateParameter);
        }
    
        public virtual int add_inventory_picture(Nullable<short> domain_id, Nullable<int> project_id, string filename, string blobFileNameWithExtension, string extension, Nullable<int> inventoryID, Nullable<int> document_type_id, string label, string addedBy)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var blobFileNameWithExtensionParameter = blobFileNameWithExtension != null ?
                new ObjectParameter("blobFileNameWithExtension", blobFileNameWithExtension) :
                new ObjectParameter("blobFileNameWithExtension", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("extension", extension) :
                new ObjectParameter("extension", typeof(string));
    
            var inventoryIDParameter = inventoryID.HasValue ?
                new ObjectParameter("inventoryID", inventoryID) :
                new ObjectParameter("inventoryID", typeof(int));
    
            var document_type_idParameter = document_type_id.HasValue ?
                new ObjectParameter("document_type_id", document_type_id) :
                new ObjectParameter("document_type_id", typeof(int));
    
            var labelParameter = label != null ?
                new ObjectParameter("label", label) :
                new ObjectParameter("label", typeof(string));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_inventory_picture", domain_idParameter, project_idParameter, filenameParameter, blobFileNameWithExtensionParameter, extensionParameter, inventoryIDParameter, document_type_idParameter, labelParameter, addedByParameter);
        }
    
        public virtual int add_room_picture(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, string filename, string blobFileNameWithExtension, string extension, string addedBy)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var blobFileNameWithExtensionParameter = blobFileNameWithExtension != null ?
                new ObjectParameter("blobFileNameWithExtension", blobFileNameWithExtension) :
                new ObjectParameter("blobFileNameWithExtension", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("extension", extension) :
                new ObjectParameter("extension", typeof(string));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_room_picture", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, filenameParameter, blobFileNameWithExtensionParameter, extensionParameter, addedByParameter);
        }
    
        public virtual int copy_inventory_document(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id, Nullable<int> copy_phase_id, Nullable<int> copy_department_id, Nullable<int> copy_room_id, Nullable<int> inventory_id, Nullable<int> new_inventory_id, string addedBy)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var copy_phase_idParameter = copy_phase_id.HasValue ?
                new ObjectParameter("copy_phase_id", copy_phase_id) :
                new ObjectParameter("copy_phase_id", typeof(int));
    
            var copy_department_idParameter = copy_department_id.HasValue ?
                new ObjectParameter("copy_department_id", copy_department_id) :
                new ObjectParameter("copy_department_id", typeof(int));
    
            var copy_room_idParameter = copy_room_id.HasValue ?
                new ObjectParameter("copy_room_id", copy_room_id) :
                new ObjectParameter("copy_room_id", typeof(int));
    
            var inventory_idParameter = inventory_id.HasValue ?
                new ObjectParameter("inventory_id", inventory_id) :
                new ObjectParameter("inventory_id", typeof(int));
    
            var new_inventory_idParameter = new_inventory_id.HasValue ?
                new ObjectParameter("new_inventory_id", new_inventory_id) :
                new ObjectParameter("new_inventory_id", typeof(int));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("copy_inventory_document", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter, copy_phase_idParameter, copy_department_idParameter, copy_room_idParameter, inventory_idParameter, new_inventory_idParameter, addedByParameter);
        }
    
        public virtual int update_link_insert_inventory_pictures(Nullable<short> domain_id, Nullable<int> from_id, string addedBy, Nullable<int> to_id, Nullable<int> from_document_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var from_idParameter = from_id.HasValue ?
                new ObjectParameter("from_id", from_id) :
                new ObjectParameter("from_id", typeof(int));
    
            var addedByParameter = addedBy != null ?
                new ObjectParameter("addedBy", addedBy) :
                new ObjectParameter("addedBy", typeof(string));
    
            var to_idParameter = to_id.HasValue ?
                new ObjectParameter("to_id", to_id) :
                new ObjectParameter("to_id", typeof(int));
    
            var from_document_idParameter = from_document_id.HasValue ?
                new ObjectParameter("from_document_id", from_document_id) :
                new ObjectParameter("from_document_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_link_insert_inventory_pictures", domain_idParameter, from_idParameter, addedByParameter, to_idParameter, from_document_idParameter);
        }
    
        public virtual int unlink_inventory(Nullable<short> domain_id, Nullable<int> inventory_target_id, string userId)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var inventory_target_idParameter = inventory_target_id.HasValue ?
                new ObjectParameter("inventory_target_id", inventory_target_id) :
                new ObjectParameter("inventory_target_id", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("unlink_inventory", domain_idParameter, inventory_target_idParameter, userIdParameter);
        }
    
        public virtual ObjectResult<get_all_audit_data_Result> get_all_audit_data(Nullable<int> domainId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateAt)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateAtParameter = dateAt.HasValue ?
                new ObjectParameter("dateAt", dateAt) :
                new ObjectParameter("dateAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_all_audit_data_Result>("get_all_audit_data", domainIdParameter, dateFromParameter, dateAtParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> update_asset_budget(Nullable<short> domainId, Nullable<int> projectId, Nullable<decimal> unitMarkup, Nullable<decimal> unitEscalation, Nullable<decimal> unitTax, Nullable<decimal> unitFreightMarkup, Nullable<decimal> unitInstallMarkup)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(short));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            var unitMarkupParameter = unitMarkup.HasValue ?
                new ObjectParameter("unitMarkup", unitMarkup) :
                new ObjectParameter("unitMarkup", typeof(decimal));
    
            var unitEscalationParameter = unitEscalation.HasValue ?
                new ObjectParameter("unitEscalation", unitEscalation) :
                new ObjectParameter("unitEscalation", typeof(decimal));
    
            var unitTaxParameter = unitTax.HasValue ?
                new ObjectParameter("unitTax", unitTax) :
                new ObjectParameter("unitTax", typeof(decimal));
    
            var unitFreightMarkupParameter = unitFreightMarkup.HasValue ?
                new ObjectParameter("unitFreightMarkup", unitFreightMarkup) :
                new ObjectParameter("unitFreightMarkup", typeof(decimal));
    
            var unitInstallMarkupParameter = unitInstallMarkup.HasValue ?
                new ObjectParameter("unitInstallMarkup", unitInstallMarkup) :
                new ObjectParameter("unitInstallMarkup", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("update_asset_budget", domainIdParameter, projectIdParameter, unitMarkupParameter, unitEscalationParameter, unitTaxParameter, unitFreightMarkupParameter, unitInstallMarkupParameter);
        }
    
        public virtual ObjectResult<get_budget_summary_values_Result> get_budget_summary_values(Nullable<int> domainId, Nullable<int> period, Nullable<int> projectId, string assetCode)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            var assetCodeParameter = assetCode != null ?
                new ObjectParameter("assetCode", assetCode) :
                new ObjectParameter("assetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_budget_summary_values_Result>("get_budget_summary_values", domainIdParameter, periodParameter, projectIdParameter, assetCodeParameter);
        }
    
        public virtual ObjectResult<get_budget_data_from_inventories_Result> get_budget_data_from_inventories(Nullable<int> domainId, Nullable<int> period, Nullable<int> projectId, string assetCode)
        {
            var domainIdParameter = domainId.HasValue ?
                new ObjectParameter("domainId", domainId) :
                new ObjectParameter("domainId", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            var assetCodeParameter = assetCode != null ?
                new ObjectParameter("assetCode", assetCode) :
                new ObjectParameter("assetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_budget_data_from_inventories_Result>("get_budget_data_from_inventories", domainIdParameter, periodParameter, projectIdParameter, assetCodeParameter);
        }
    
        public virtual ObjectResult<get_project_treeview_Result> get_project_treeview(Nullable<int> domain_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_project_treeview_Result>("get_project_treeview", domain_idParameter);
        }
    
        public virtual ObjectResult<copy_single_item_inventory_Result> copy_single_item_inventory(Nullable<short> domain_id, Nullable<int> curr_project_id, Nullable<int> curr_phase_id, Nullable<int> curr_department_id, Nullable<int> curr_room_id, Nullable<int> curr_inventory_id, Nullable<int> new_project_id, Nullable<int> new_phase_id, Nullable<int> new_department_id, Nullable<int> new_room_id, Nullable<int> quantity, Nullable<bool> copy_options, string added_by, Nullable<int> inventory_source_id, Nullable<decimal> unit_budget, Nullable<bool> with_budget)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var curr_project_idParameter = curr_project_id.HasValue ?
                new ObjectParameter("curr_project_id", curr_project_id) :
                new ObjectParameter("curr_project_id", typeof(int));
    
            var curr_phase_idParameter = curr_phase_id.HasValue ?
                new ObjectParameter("curr_phase_id", curr_phase_id) :
                new ObjectParameter("curr_phase_id", typeof(int));
    
            var curr_department_idParameter = curr_department_id.HasValue ?
                new ObjectParameter("curr_department_id", curr_department_id) :
                new ObjectParameter("curr_department_id", typeof(int));
    
            var curr_room_idParameter = curr_room_id.HasValue ?
                new ObjectParameter("curr_room_id", curr_room_id) :
                new ObjectParameter("curr_room_id", typeof(int));
    
            var curr_inventory_idParameter = curr_inventory_id.HasValue ?
                new ObjectParameter("curr_inventory_id", curr_inventory_id) :
                new ObjectParameter("curr_inventory_id", typeof(int));
    
            var new_project_idParameter = new_project_id.HasValue ?
                new ObjectParameter("new_project_id", new_project_id) :
                new ObjectParameter("new_project_id", typeof(int));
    
            var new_phase_idParameter = new_phase_id.HasValue ?
                new ObjectParameter("new_phase_id", new_phase_id) :
                new ObjectParameter("new_phase_id", typeof(int));
    
            var new_department_idParameter = new_department_id.HasValue ?
                new ObjectParameter("new_department_id", new_department_id) :
                new ObjectParameter("new_department_id", typeof(int));
    
            var new_room_idParameter = new_room_id.HasValue ?
                new ObjectParameter("new_room_id", new_room_id) :
                new ObjectParameter("new_room_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var copy_optionsParameter = copy_options.HasValue ?
                new ObjectParameter("copy_options", copy_options) :
                new ObjectParameter("copy_options", typeof(bool));
    
            var added_byParameter = added_by != null ?
                new ObjectParameter("added_by", added_by) :
                new ObjectParameter("added_by", typeof(string));
    
            var inventory_source_idParameter = inventory_source_id.HasValue ?
                new ObjectParameter("inventory_source_id", inventory_source_id) :
                new ObjectParameter("inventory_source_id", typeof(int));
    
            var unit_budgetParameter = unit_budget.HasValue ?
                new ObjectParameter("unit_budget", unit_budget) :
                new ObjectParameter("unit_budget", typeof(decimal));
    
            var with_budgetParameter = with_budget.HasValue ?
                new ObjectParameter("with_budget", with_budget) :
                new ObjectParameter("with_budget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<copy_single_item_inventory_Result>("copy_single_item_inventory", domain_idParameter, curr_project_idParameter, curr_phase_idParameter, curr_department_idParameter, curr_room_idParameter, curr_inventory_idParameter, new_project_idParameter, new_phase_idParameter, new_department_idParameter, new_room_idParameter, quantityParameter, copy_optionsParameter, added_byParameter, inventory_source_idParameter, unit_budgetParameter, with_budgetParameter);
        }
    
        public virtual ObjectResult<get_purchase_orders_Result> get_purchase_orders(Nullable<short> domain_id, Nullable<int> project_id, Nullable<int> phase_id, Nullable<int> department_id, Nullable<int> room_id)
        {
            var domain_idParameter = domain_id.HasValue ?
                new ObjectParameter("domain_id", domain_id) :
                new ObjectParameter("domain_id", typeof(short));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(int));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_purchase_orders_Result>("get_purchase_orders", domain_idParameter, project_idParameter, phase_idParameter, department_idParameter, room_idParameter);
        }
    }
}
